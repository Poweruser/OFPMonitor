游戏程序的“detected version”调用的是class FileVersion里int getOFPVersion函数。它是由majorVersion和buildVersion经过IntToStr转为字符串相加后再转回整数的结果，对2.01版本会返回21。另外，在“允许进入服务器”的环节，由 OFPMonitorModel::getMatchingGame 通过 Game::checkIfCorrectGame 函数进行版本号大小校验时，进行比较的版本也是通过getOFPVersion的返回值获取。

服务器的Version: 201/201，版本号的值是LABEL_SERVERINFO_VERSION_VALUE，它的显示方式是srv指针的getRequiredVersion和getActualVersion成员直接转成字符串。
getRequiredVersion是在Server.cpp中 ident == "reqver" 时所读取的 value 直接转成str的结果，或许无法作为参考

因此考虑编辑 getOFPVersion 函数，函数体位于 FileVersion.cpp. 将
int FileVersion::getOFPVersion() {
	if (!this->FixedInfo) { return 0; }
        return StrToIntDef(IntToStr(this->majorVersion()) + IntToStr(this->buildVersion()), 0);
}
替换为
int FileVersion::getOFPVersion() {
	if (!this->FixedInfo) { return 0; }
		String thezero;
		if ((this->buildVersion()) < 10) { thezero = "0"; }
        return StrToIntDef(IntToStr(this->majorVersion()) + thezero + IntToStr(this->buildVersion()), 0);
}
需注意BCB6里String类首字母S要大写

关键字替换：
Cold war crisis, 完整名为 Operation Flashpoint: Cold War Crisis, 替换为 Arma: Resistance. 文件 Form_Settings.dfm, OFPMonitorDefinitions.h
OperationFlashpoint.exe, 替换为ArmAResistance.exe, 文件OFPMonitorDefinitions.h




编译时需要：
安装C++ Builder 6（以下简称BCB6）；安装BCB6可用的Indy10控件。
Indy10：资源来自https://download.csdn.net/download/gdhuman/5334614，通过CSDN代下获得资源，于QQ邮箱接收。
按照链接https://bbs.csdn.net/topics/200083490，也即《2006.12.17   ccrun纠正版》，也即所下载的Indy.v10.1.6.Full.Source.Delphi.BCB目录下ccrun.com.txt及indy10安装提示.txt所记录的方式，清理BCB6的旧Indy，然后按操作执行，最后通过Indy.v10.1.6.Full.Source.Delphi.BCB\Lib\Fullc6.Indy10.bat生成完整的C6目录。
将C6目录复制到BCB6目录下Project里（这步只是简化Component: Install packages而已，不是必须的），添加Indy10的2个组件，这步在win10系统无法执行，需要在虚拟机XP系统里添加（使用虚拟机的提示源于https://bbs.csdn.net/topics/391854138）

Project Options里include和lib仍然需要使用OFPMonitor\vcl_components\bin\Indy10_5161_BCB6.rar内相应的include与lib目录。它们可以在BCB6里手动指定，也可以解压后合并到OFPMonitor.bpr所在目录下的include及lib目录。作为参考，这三个子目录也被存储到BCB\Project\Indy\内部

从OFPMonitor\vcl_components里加载CoolTrayIcon.bpl

Project Options Application里读取图标（如未编辑则跳过）。Title在这里没法改，需要在OFPMonitor.cpp里对Application->Title = "OFPMonitor " + fv->getFullVersion()做修改。最后的文件名要自己手动改
Project Options Version Info里修改版本号。只改动OFPMonitor.bpr的版本没用，它只影响右键点击图标后的信息。修改版本为1.7.4.1，增加备注，修改产品名和内部名





还有两篇相关文章https://blog.csdn.net/sczyq/article/details/663538，https://blog.csdn.net/9527/article/details/1343234，但这里没用上。估计已经被包含在下载源里了。





打算修改图标为2.01的ico，然后删除1.96的入口及1.99以下服务器的显示
在进程里和OFPMonitor仍然识别为相同的程序，且右下角托盘图标还是原有的
“自动化”里没有对2.01游戏的支持。对1.99支持，以 ColdWarAssault, Cold War Assault 为关键字分别检索试一下


OFPMonitor 关键字替换：改名为ArmaMonitor
Language Files: "OFPMonitor" appear at "Updating" informations 2 times. Replace them.
Path(Folder): There're an "lib\ofpmonitor\" folder. The path appear in OFPMonitor.bpr and OFPMonitor.cpp, with their corresponding .~bpr and .~cpp files. Unnecessary to rename that folder but aiming to rename the project, this path is temporarily renamed.

Words: Search with "match whole word". File name except main cpp file and information remain unchanged.

File Name: Rename the OFPMonitor.bpr and OFPMonitor.cpp. OFPMonitor.res need rename as well.
OFPMonitor.tds文件：剪切掉。不是编译程序所必需的，大概是中间产物
程序名:  Application->Title 修改

自动启动游戏: getAppTitleByGameId 的返回结果，主要在于 GameControl.cpp 文件里。涉及到变量 offset1, 它是 WriteProcessMemory 的第二个参数 lpBaseAddress. 姑且先直接用1.99的值，测试可行。关键字大概是 获取进程的内存首地址 。getAppTitleByGameId 定义于 OFPMonitorDefinitions.h 里，case ARMARES 的输出应当和进程名一致，也即不可以有冒号，而且是大小写敏感的，也即必须要写ArmA，不能是Arma
顺带把 OFPCWC, OFP:CWC 做一下关键字替换（全字匹配）。注意和上面 OFPMonitorDefinitions.h 里，case ARMARES 的输出不要冲突
简体字语言支持：基于马哈鱼编辑过的文档进行再次编辑。


1.99以下版本过滤：
Server.cpp里, ServerFilterResult Server::checkFilter(ServerFilter *filter) 内添加一个关于版本的判断


1.96游戏设置隐藏
Form_Settings.cpp 中
void __fastcall TWINDOW_SETTINGS::CHECKBOX_OFPRESClick(TObject *Sender) 函数，单击的逻辑值变化注释，无条件保留"remove"效果——无效。
void TWINDOW_SETTINGS::updateGames() 函数中 if(g->isActive()) 判定里追加 (i != OFPRES)——同上。设置游戏路径等的效果没有，但是label显示仍然有效。大概需要从一开始就隐藏掉最基本的显示，因此直接对groupBox->visible 属性赋值。至于CHECKBOX_OFPRES, 在Form_Settings.dfm 里直接对object加一个visible = false就可以隐藏了